#include "Game/App.hpp"
#include "Game/Game.hpp"
#include "Game/GameCommon.hpp"
#include "Engine/Core/Time.hpp"
#include "Engine/Input/InputSystem.hpp"

App::App()
{
	g_theGame     = new Game();
	g_theRenderer = new Renderer();
	g_theInput    = new InputSystem();
}

App::~App()
{
	delete g_theGame;
	g_theGame = nullptr;

	delete g_theInput;
	g_theInput = nullptr;

	delete g_theRenderer;
	g_theRenderer = nullptr;

}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*DATE    : 
*@purpose : Runs the entire frame
*@param   : NIL
*@return  : NIL
*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void App::RunFrame()
{
	g_theRenderer->BeginFrame();
	g_theInput->BeginFrame();

	Update(MAX_DELTA_VALUE);
	Render();

	g_theInput->EndFrame();
	g_theRenderer->EndFrame();
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*DATE    : 
*@purpose : Updates the whole App
*@param   : NIL
*@return  : NIL
*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void App::Update(float deltaTime)
{
	g_theGame->Update(deltaTime);
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*DATE    : 
*@purpose : Renders the Full App
*@param   : NIL
*@return  : NIL
*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void App::Render()
{
	g_theGame->Render();
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/*DATE    : 
*@purpose : Requests the app to quit 
*@param   : NIL
*@return  : NIL
*///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void App::RequestToQuit()
{
	g_isQuitTriggered = true;
}

bool App::IsReadyToQuit()
{
	return g_isQuitTriggered;
}



